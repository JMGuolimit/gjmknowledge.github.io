(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{515:function(t,n,r){"use strict";r.r(n);var i=r(2),e=Object(i.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("PrintStream和PrintWriter\n最后更新: 2019/9/5 15:44 / 阅读: 569559\nPrintStream是一种FilterOutputStream，它在OutputStream的接口上，额外提供了一些写入各种数据类型的方法：")]),t._v(" "),n("p",[t._v("写入int：print(int)\n写入boolean：print(boolean)\n写入String：print(String)\n写入Object：print(Object)，实际上相当于print(object.toString())\n...\n以及对应的一组println()方法，它会自动加上换行符。")]),t._v(" "),n("p",[t._v("我们经常使用的System.out.println()实际上就是使用PrintStream打印各种数据。其中，System.out是系统默认提供的PrintStream，表示标准输出：")]),t._v(" "),n("p",[t._v('System.out.print(12345); // 输出12345\nSystem.out.print(new Object()); // 输出类似java.lang.Object@3c7a835a\nSystem.out.println("Hello"); // 输出Hello并换行\nSystem.err是系统默认提供的标准错误输出。')]),t._v(" "),n("p",[t._v("PrintStream和OutputStream相比，除了添加了一组print()/println()方法，可以打印各种数据类型，比较方便外，它还有一个额外的优点，就是不会抛出IOException，这样我们在编写代码的时候，就不必捕获IOException。")]),t._v(" "),n("p",[t._v("PrintWriter\nPrintStream最终输出的总是byte数据，而PrintWriter则是扩展了Writer接口，它的print()/println()方法最终输出的是char数据。两者的使用方法几乎是一模一样的：")]),t._v(" "),n("p",[t._v('import java.io.*;\npublic class Main {\npublic static void main(String[] args)     {\nStringWriter buffer = new StringWriter();\ntry (PrintWriter pw = new PrintWriter(buffer)) {\npw.println("Hello");\npw.println(12345);\npw.println(true);\n}\nSystem.out.println(buffer.toString());\n}\n}')]),t._v(" "),n("p",[t._v("Run\n小结\nPrintStream是一种能接收各种数据类型的输出，打印数据时比较方便：")]),t._v(" "),n("p",[t._v("System.out是标准输出；\nSystem.err是标准错误输出。\nPrintWriter是基于Writer的输出。")])])}),[],!1,null,null,null);n.default=e.exports}}]);