(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{514:function(t,e,n){"use strict";n.r(e);var i=n(2),a=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("使用Files\n最后更新: 2020/10/11 10:38 / 阅读: 230957\n从Java 7开始，提供了Files这个工具类，能极大地方便我们读写文件。")]),t._v(" "),e("p",[t._v("虽然Files是java.nio包里面的类，但他俩封装了很多读写文件的简单方法，例如，我们要把一个文件的全部内容读取为一个byte[]，可以这么写：")]),t._v(" "),e("p",[t._v('byte[] data = Files.readAllBytes(Path.of("/path/to/file.txt"));\n如果是文本文件，可以把一个文件的全部内容读取为String：')]),t._v(" "),e("p",[t._v('// 默认使用UTF-8编码读取:\nString content1 = Files.readString(Path.of("/path/to/file.txt"));\n// 可指定编码:\nString content2 = Files.readString(Path.of("/path", "to", "file.txt"), StandardCharsets.ISO_8859_1);\n// 按行读取并返回每行内容:\nList'),e("String",[t._v(' lines = Files.readAllLines(Path.of("/path/to/file.txt"));\n写入文件也非常方便：')])],1),t._v(" "),e("p",[t._v('// 写入二进制文件:\nbyte[] data = ...\nFiles.write(Path.of("/path/to/file.txt"), data);\n// 写入文本并指定编码:\nFiles.writeString(Path.of("/path/to/file.txt"), "文本内容...", StandardCharsets.ISO_8859_1);\n// 按行写入文本:\nList'),e("String",[t._v(' lines = ...\nFiles.write(Path.of("/path/to/file.txt"), lines);\n此外，Files工具类还有copy()、delete()、exists()、move()等快捷方法操作文件和目录。')])],1),t._v(" "),e("p",[t._v("最后需要特别注意的是，Files提供的读写方法，受内存限制，只能读写小文件，例如配置文件等，不可一次读入几个G的大文件。读写大型文件仍然要使用文件流，每次只读写一部分文件内容。")]),t._v(" "),e("p",[t._v("小结\n对于简单的小文件读写操作，可以使用Files工具类简化代码。")])])}),[],!1,null,null,null);e.default=a.exports}}]);